{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAqB9C,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAQlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEXO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAc,IAAD,EAGZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KA2BtC,OAnBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAGEH,EAAS,CACTf,KAAMkB,EACFL,SAAS,SAQ3B,CAACpB,IAGIqB,EDpBuBK,CAAa1B,GAA/Ba,EAJwB,EAI7BN,KAAYa,EAJiB,EAIjBA,QAEnB,OACI,qCACI,6BAAKpB,IAEJoB,GAAU,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAE,EAAF,eAEIA,GADCA,EAAIC,aEhBpBgB,EAAe,WAAO,IAAD,EAGMzC,mBAAS,CAAC,KAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAK9B,OACI,qCACI,8CACA,cAAE,EAAF,CAAcA,cAAgBA,IAClC,uBAGC,6BAEW2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC6B,IAASC,OACN,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.73f9fc26.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInpoutChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategories(cats => [ inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInpoutChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n};\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};","    export const getGifs = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=VsYj0KcQncoz711QL8OAJTevntfCPyIK`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n        \r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/* , { useEffect, useState } */ from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GiftGrid = ({category}) => {\r\n   \r\n    \r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading &&<p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        < GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                        ))\r\n                        \r\n                        \r\n                    }\r\n                \r\n            </div>\r\n       </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n        \r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                                   \r\n                    setState({\r\n                    data: imgs,\r\n                        loading: false\r\n                    \r\n                });\r\n              \r\n\r\n               \r\n            })\r\n\r\n    },[category])\r\n    \r\n    \r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n   \r\n\r\n    const [categories, setCategories] = useState([''])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            < AddCategory setCategories={ setCategories}/>\r\n        <hr />\r\n        \r\n        \r\n         <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GiftGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n        </ol>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n   <GifExpertApp />,\n   document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}